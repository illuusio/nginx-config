# there's a lot of repetition here because different applications might use different
# (and possibly non-standard) types. we don't really care, we still want them included
# don't include text/html -- it is always included anyway

gzip_types application/atom+xml
application/atom_xml
application/javascript
application/json
application/ld+json
application/manifest+json
application/rss+xml
application/vnd.geo+json
application/vnd.ms-fontobject
application/x-font-opentype
application/x-font-ttf
application/xhtml+xml
application/x-javascript
application/xml
application/xml+rss
application/x-web-app-manifest+json
font/opentype
image/bmp
image/svg+xml
image/x-icon
text/cache-manifest
text/css
text/javascript
text/plain
text/vcard
text/vnd.rim.location.xloc
text/vtt text/x-component
text/x-cross-domain-policy
text/xml;

# increase the compression level, at the expense of additional CPU
# cpu cycles are cheap virtually everywhere now, bandwidth not nearly as much
gzip_comp_level 6;

# set the Vary: Accept-Encoding header to force proxies to store compressed and uncompressed versions
# per the nginx docs, a bug in IE 4 - 6 will cause them to not cache anything with this on
# most people aren't going to care about ie 6 anymore, but keep that in mind
gzip_vary on;

# increase the size of the buffers which hold responses to make sure larger content can be compressed too
# this means there are 16 buffers and they can each hold 8k
# if you serve a lot of ridiculously large text (like combined CSS) you might consider upping this slightly
gzip_buffers 32 16k;

# up the minimum length a little to account for gzip overhead
# this means anything smaller than 50 bytes won't be compressed.
# the default is 20 bytes, which is sooo tiny it's a waste to compress
gzip_min_length 128;

# Enable gzip but do not remove ETag headers
gzip_proxied any;

# Turn gzip globally on
gzip on;
